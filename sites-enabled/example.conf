server {
    listen 80;
    server_name DOMAIN; 

    # redirect to https version
    return 301 https://DOMAIN/$request_uri;

#   No https version, remove the 301 redirect
#   location / {
#       # Cache settings
#       proxy_cache             rproxy_cache;
#       proxy_cache_revalidate  on;
#       proxy_cache_min_uses    3;
#       proxy_cache_lock        on;
#       proxy_cache_use_stale   error timeout updating http_500 http_502 http_503
#                               http_504;
#       
#       # Reverse proxy headers
#       proxy_set_header        Host $host;
#       proxy_set_header        X-Real-IP $remote_addr;
#       proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header        X-Forwarded-Proto $scheme;
#
#       proxy_read_timeout  90;
#       proxy_pass          http://ORIGINALHOST;
#       proxy_redirect      http://ORIGINALHOST http://DOMAIN;
#   }

}

server {
    listen 443 ssl http2 default_server;
    server_name DOMAIN; 

    ssl    on;
    # change the path to your needs 
    ssl_certificate     /etc/nginx/certs/DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/DOMAIN/privkey.pem;

    location / {
        proxy_read_timeout  90;

        # Cache settings
        proxy_cache             rproxy_cache;
        proxy_cache_revalidate  on;
        proxy_cache_min_uses    3;
        proxy_cache_lock        on;
        proxy_cache_use_stale   error timeout updating http_500 http_502 http_503
        
        # Reverse proxy headers
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;

        # Reverse proxy redirects
        proxy_pass          http://ORIGINALHOST;
        proxy_redirect      http://ORIGINALHOST https://DOMAIN;
    }
}
